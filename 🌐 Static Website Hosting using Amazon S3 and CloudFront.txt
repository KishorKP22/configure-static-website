?? Static Website Hosting using Amazon S3 and CloudFront
?? Project Overview
This project demonstrates how to host a static website using Amazon S3 and improve its performance and global availability using Amazon CloudFront (CDN).
* The static website files (like index.html, images, CSS, etc.) are stored in an S3 bucket with static website hosting enabled.
* Amazon CloudFront is used to serve the content securely and efficiently from global edge locations.
* Finally, the website is tested to ensure it's accessible via CloudFront, and the S3 bucket is secured by blocking public access.

?? Objectives
* Host and configure a static website on Amazon S3
* Integrate it with CloudFront for global delivery
* Make the website fast, secure, and scalable

? Prerequisites
* Basic knowledge of AWS Console
* Understanding of S3 and CloudFront
* A simple static website folder (with files like index.html, error.html, etc.)

??? Step-by-Step Implementation
?? Step 1: Login to AWS Console
Log in to your AWS account at https://aws.amazon.com.

?? Step 2: Create and Configure S3 Bucket
1. Go to S3 in AWS Console.
2. Click Create bucket.
o Name: demo-bucket-<unique-number>
o Region: us-west-2 (Oregon)
o Uncheck Block all public access
o Acknowledge the warning
3. After the bucket is created:
o Go to Properties ? Enable Static website hosting
o Set:
* Index document: index.html
* Error document: error.html
o Click Save changes

?? Step 3: Upload Website Files to S3
1. Go to the Objects tab in your bucket.
2. Click Upload ? Add all files and folders from your static website (not the parent folder).
3. Click Upload.

?? Step 4: Set S3 Bucket Policy (Allow Public Access Temporarily)
1. Go to Permissions ? Bucket policy
2. Paste the following (replace YOUR_BUCKET_NAME):
json
CopyEdit
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Sid": "AddPerm",
      "Effect": "Allow",
      "Principal": "*",
      "Action": "s3:GetObject",
      "Resource": "arn:aws:s3:::YOUR_BUCKET_NAME/*"
    }
  ]
}
3. Save the policy.

?? Step 5: Test the Website via S3
1. Go to Properties tab ? Scroll to Static website hosting
2. Copy the S3 website endpoint
3. Paste it in your browser — you should see your website!

?? Step 6: Create CloudFront Distribution
1. Go to CloudFront in AWS Console.
2. Click Create Distribution
o Origin domain: paste your S3 website endpoint
o Origin Access: Choose Origin Access Control (OAC) ? Create new
* Name: demo-s3cf-<unique-number>
* Signing: Enable Sign requests
o Cache settings: leave as default
o Web Application Firewall (WAF): Do not enable
o Price Class: Use only North America and Europe
o Default root object: index.html
3. Click Create Distribution

?? Step 7: Secure the Bucket (Only Allow CloudFront)
1. Go back to the S3 Bucket Policy section.
2. Click Edit ? Replace policy with the one copied from CloudFront (it will include CloudFront OAC).
3. Save changes.
4. Under Block public access, click Edit:
o Select Block all public access
o Confirm changes
?? Now, the S3 URL will stop working (403 error) because public access is blocked — this is expected.

?? Step 8: Test the Website via CloudFront
1. Wait for distribution to be Deployed (Enabled) — may take up to 15 minutes.
2. Copy the CloudFront domain name
3. Paste it in your browser — your static website should load!

? Final Result
* Website is hosted in S3
* CloudFront serves the content globally for low latency
* S3 is private — only CloudFront has access
* Website is secure, fast, and globally accessible

?? Tools Used
* Amazon S3: Object storage for static files
* Amazon CloudFront: Content Delivery Network
* IAM Policies: For secure access
* AWS Console: For configuration

?? Summary
This project showcases how to:
* Host a static website using Amazon S3
* Use Amazon CloudFront for CDN delivery
* Apply secure access by blocking S3 public access and using CloudFront only

